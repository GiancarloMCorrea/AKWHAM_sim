text(x = 0.04, y = 1, labels = "D", xpd = NA, cex = 1.5)
box()
dev.off()
setwd("~/GitHub/AKWHAM_sim")
# Clear workspace
rm(list=ls())
# Load required libraries
library(tidyr)
library(dplyr)
library(ggplot2)
library(wham)
require(doParallel)
require(foreach)
# Set working directory:
main_dir = 'C:/Use/GitHub/AKWHAM_sim'
setwd(main_dir)
# Create Scenario DF:
source(file.path("code", "config_scenarios.R"))
# Clear workspace
rm(list=ls())
# Read main dir again
main_dir = getwd()
# Read OM and EM data frames
df.scenario = readRDS(file.path("inputs", "df.scenarios.RDS"))
simi = 1
scenj = 1
# CHANGE THIS IF REQUIRED!
# Main directory:
main_dir = 'C:/Use/GitHub/AKWHAM_sim'
# Load required libraries:
library(wham)
source(file.path(main_dir, "code", "make_om_plots.R"))
# Read inputs:
om_inputs <- readRDS(file.path(main_dir, "inputs", "om_inputs.RDS"))
em_inputs <- readRDS(file.path(main_dir, "inputs", "em_inputs.RDS"))
df.scenario <- readRDS(file.path(main_dir, "inputs", "df.scenarios.RDS"))
# Make data.frame summarizing scenario:
this_scenario <- data.frame(df.scenario[scenj, ])
model <- cbind(im = simi, scenario = scenj, optimized=FALSE, sdreport=FALSE, this_scenario)
# Select observations to pass to EM from sim_data:
# DO NOT PASS 'use_xxx_xxx' (except for caal, see below)
obs_names <- c("agg_catch", "agg_indices", "catch_paa", "index_paa", "catch_pal", "index_pal",
'catch_caal', 'index_caal', 'waa', 'Ecov_obs', "obsvec", "agesvec")
#######################################################
# Read seed:
# I don't think we want to use the same (e.g. 1000) seeds for everything.
seeds <- readRDS(file.path(main_dir, "inputs","seeds.RDS"))
# Print scenario name:
cat(paste0("START Scenario: ", scenj, " Sim: ", simi, "\n"))
#######################################################
# Run OM:
om <- fit_wham(om_inputs[[scenj]], do.fit = FALSE, MakeADFun.silent = TRUE)
# Define seed:
# TODO: use same seeds based on OM?
set.seed(seeds[[scenj]][simi])
df.scenario
simi
scenj = 1
scenj
#######################################################
# Run OM:
om <- fit_wham(om_inputs[[scenj]], do.fit = FALSE, MakeADFun.silent = TRUE)
# Define seed:
# TODO: use same seeds based on OM?
set.seed(seeds[[scenj]][simi])
# Simulate data:
sim_data <- om$simulate(complete=TRUE)
if(simi == 1) make_plot_om(sim_data, scenj, main_dir) # Make plot
if(simi == 1 & scenj <= 4) saveRDS(object = om, file = paste0('inputs/om_sample_', scenj,'.RDS')) # Save OM data to make plots later
scenj = 2
om <- fit_wham(om_inputs[[scenj]], do.fit = FALSE, MakeADFun.silent = TRUE)
# Define seed:
# TODO: use same seeds based on OM?
set.seed(seeds[[scenj]][simi])
# Simulate data:
sim_data <- om$simulate(complete=TRUE)
if(simi == 1) make_plot_om(sim_data, scenj, main_dir) # Make plot
if(simi == 1 & scenj <= 4) saveRDS(object = om, file = paste0('inputs/om_sample_', scenj,'.RDS')) # Save OM data to make plots later
scenj = 3
om <- fit_wham(om_inputs[[scenj]], do.fit = FALSE, MakeADFun.silent = TRUE)
# Define seed:
# TODO: use same seeds based on OM?
set.seed(seeds[[scenj]][simi])
# Simulate data:
sim_data <- om$simulate(complete=TRUE)
if(simi == 1) make_plot_om(sim_data, scenj, main_dir) # Make plot
if(simi == 1 & scenj <= 4) saveRDS(object = om, file = paste0('inputs/om_sample_', scenj,'.RDS')) # Save OM data to make plots later
scenj = 4
#######################################################
# Run OM:
om <- fit_wham(om_inputs[[scenj]], do.fit = FALSE, MakeADFun.silent = TRUE)
# Define seed:
# TODO: use same seeds based on OM?
set.seed(seeds[[scenj]][simi])
# Simulate data:
sim_data <- om$simulate(complete=TRUE)
if(simi == 1) make_plot_om(sim_data, scenj, main_dir) # Make plot
if(simi == 1 & scenj <= 4) saveRDS(object = om, file = paste0('inputs/om_sample_', scenj,'.RDS')) # Save OM data to make plots later
# -------------------------------------------------------------------------
# Supp figure: mean length-at-age variability by
om_sim1 = readRDS(file = 'inputs/om_sample_1.RDS')
om_sim2 = readRDS(file = 'inputs/om_sample_2.RDS')
om_sim3 = readRDS(file = 'inputs/om_sample_3.RDS')
om_sim4 = readRDS(file = 'inputs/om_sample_4.RDS')
laa_1 = om_sim1$rep$LAA
laa_1
laa_1 = om_sim1$rep$LAA
laa_2 = om_sim2$rep$LAA
laa_3 = om_sim3$rep$LAA
laa_4 = om_sim4$rep$LAA
laa_3
tidyr::gather(laa_1, 'ages', 'years')
reshape2::melt(laa_1)
cbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '1'),
reshape2::melt(laa_3) %>% mutate(type = '1'), reshape2::melt(laa_4) %>% mutate(type = '1'))
rbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '1'),
reshape2::melt(laa_3) %>% mutate(type = '1'), reshape2::melt(laa_4) %>% mutate(type = '1'))
plot_df = rbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '1'),
reshape2::melt(laa_3) %>% mutate(type = '1'), reshape2::melt(laa_4) %>% mutate(type = '1'))
plot_df = plot_df %>% mutate(om_label = factor(type, levels = 1:4,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
plot_df
# Merge:
plot_df = rbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '2'),
reshape2::melt(laa_3) %>% mutate(type = '3'), reshape2::melt(laa_4) %>% mutate(type = '4'))
plot_df = plot_df %>% mutate(om_label = factor(type, levels = 1:4,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
head(plot_df)
# Merge:
plot_df = rbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '2'),
reshape2::melt(laa_3) %>% mutate(type = '3'), reshape2::melt(laa_4) %>% mutate(type = '4'))
plot_df = plot_df %>% mutate(type = factor(type, levels = 1:4,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
head(plot_df)
ggplot(plot_df, aes(x=Var1, y=value, color = factor(Var2))) +
theme_bw() +
coord_cartesian(ylim = c(0, 130)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length') +
facet_grid(. ~ type, labeller = my_label_parsed)
# Call aux functions
source('aux_functions.R')
ggplot(plot_df, aes(x=Var1, y=value, color = factor(Var2))) +
theme_bw() +
coord_cartesian(ylim = c(0, 130)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length') +
facet_grid(. ~ type, labeller = my_label_parsed)
plot_df
plot_df$Var1
plot_df$Var2
plot_df$value
# Merge:
plot_df = rbind(reshape2::melt(laa_1) %>% mutate(type = '1'), reshape2::melt(laa_2) %>% mutate(type = '2'),
reshape2::melt(laa_3) %>% mutate(type = '3'), reshape2::melt(laa_4) %>% mutate(type = '4'))
plot_df = plot_df %>% mutate(Var2 = factor(Var2, levels = 1:10),
type = factor(type, levels = 1:4,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
plot_df
ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 130)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length') +
facet_grid(. ~ type, labeller = my_label_parsed)
ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length') +
facet_grid(. ~ type, labeller = my_label_parsed)
ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length') +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
figs2 = ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom') +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'Figure_S2.jpg'), plot = figs2,
width = 190 , height = 160, units = 'mm', dpi = 500)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 160, units = 'mm', dpi = 500)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 180, units = 'mm', dpi = 500)
figs2 = ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom',
strip.text = element_text(size = 20)) +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 180, units = 'mm', dpi = 500)
figs2 = ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom',
strip.text = element_text(size = 15)) +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 180, units = 'mm', dpi = 500)
figs2 = ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom',
strip.text = element_text(size = 10)) +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 180, units = 'mm', dpi = 500)
figs2 = ggplot(plot_df, aes(x=Var1, y=value, color = Var2)) +
geom_line() +
theme_bw() +
coord_cartesian(ylim = c(0, 120)) +
theme(legend.position = 'bottom',
strip.text = element_text(size = 12)) +
xlab('Simulated years') + ylab('Population mean length (cm)') +
guides(color = guide_legend(title='Ages')) +
scale_color_viridis_d() +
facet_wrap(. ~ type, labeller = my_label_parsed)
ggsave(filename = 'plots/Figure_S2.jpg', plot = figs2,
width = 190 , height = 180, units = 'mm', dpi = 500)
library(ggplot2)
library(dplyr)
library(plyr)
library(tidyr)
theme_set(theme_bw())
# Clean workspace
rm(list = ls())
# Call aux functions
source('aux_functions.R')
# Save folder:
save_folder = 'plots'
# Read scenarios df
df.scenario = readRDS('inputs/df.scenarios.RDS')
# Order EM labels:
EM_order = c("WEm-paa-paa", "WNP-paa-paa", "LP-pal-pal", "LP-pal-paa", "LP-pal-pal/caal(r)", "LP-pal-pal/caal(s)",
"LEc-pal-pal", "LEc-pal-paa", "LEc-pal-pal/caal(r)", "LEc-pal-pal/caal(s)")
# TS data:
ts_df1 = readRDS(file = 'outputs/ts_results_1.RDS')
ts_df2 = readRDS(file = 'outputs/ts_results_2.RDS')
ts_df = rbind(ts_df1, ts_df2)
# par data:
par_df1 = readRDS(file = 'outputs/par_results_1.RDS')
par_df2 = readRDS(file = 'outputs/par_results_2.RDS')
par_df = rbind(par_df1, par_df2)
# LAA data:
laa_df1 = readRDS(file = 'outputs/laa_results_1.RDS')
laa_df2 = readRDS(file = 'outputs/laa_results_2.RDS')
laa_df = rbind(laa_df1, laa_df2)
# WAA data:
waa_df1 = readRDS(file = 'outputs/waa_results_1.RDS')
waa_df2 = readRDS(file = 'outputs/waa_results_2.RDS')
waa_df = rbind(waa_df1, waa_df2)
# -------------------------------------------------------------------------
# PAR plot (for ALL scenarios):
temp = par_df %>% filter(par %in% c('log_F1', 'log_N1_pars', 'logit_q', 'mean_rec_pars'))
temp = temp %>% filter(maxgrad < 1)
temp = temp %>% mutate(method = factor(method, levels = c('EWAA', 'WAA', 'growth', 'Ecov'),
labels = c('WEm', 'WNP', 'LP', 'LEc')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(par, levels = c('mean_rec_pars', 'logit_q', 'log_N1_pars', 'log_F1'),
labels = c(expression(bar(R)), 'Q', expression(N["1,1"]), 'F[1]')))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p1 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.5, 0.5)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 12)) +
scale_y_continuous(breaks=c(-0.5, 0, 0.5)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
p1
ggsave(filename = file.path(save_folder, 'par.jpg'), plot = p1,
width = 190 , height = 220, units = 'mm', dpi = 500)
# Make plot:
p1 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.5, 0.5)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.5, 0, 0.5)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'par.jpg'), plot = p1,
width = 190 , height = 220, units = 'mm', dpi = 500)
# -------------------------------------------------------------------------
# TS plot (median over years, for ALL scenarios):
temp = ts_df %>% filter(maxgrad < 1)
temp = temp %>% dplyr::group_by(par, data_scen, catch_data, index_data, caal_samp, method, growth_par, im) %>%
dplyr::summarise(rel_error = median(rel_error))
temp = temp %>% mutate(method = factor(method, levels = c('EWAA', 'WAA', 'growth', 'Ecov'),
labels = c('WEm', 'WNP', 'LP', 'LEc')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(par, levels = c('SSB', 'Rec', 'F'),
labels = c('SSB', 'R', 'F')))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p2 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.5, 0.5)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.5, 0, 0.5)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
p2
# Make plot:
p2 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.5, 0.5)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.3, 0, 0.3)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'ts.jpg'), plot = p2,
width = 190 , height = 180, units = 'mm', dpi = 500)
# -------------------------------------------------------------------------
# Growth parameters (only for growth, Ecov, and SemiP scenarios):
temp = par_df %>% filter(par %in% c('k', 'Linf', 'L1', 'SD1', 'SDA'))
temp = temp %>% filter(maxgrad < 1, scenario %in% c(9:40, 49:80)) # select only relevant scenarios
temp = temp %>% mutate(method = factor(method, levels = c('growth', 'Ecov'),
labels = c('LP', 'LEc')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(par, levels = c('k', 'Linf', 'L1', 'SD1', 'SDA'),
labels = c('k', expression(L[infinity]), expression(L[1]), expression(SD[1]), expression(SD[A]))))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p4 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.5, 0.5)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.5, 0, 0.5)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'growth.jpg'), plot = p4,
width = 190 , height = 240, units = 'mm', dpi = 500)
# -------------------------------------------------------------------------
# Ecov parameters (only for Ecov scenarios):
temp = par_df %>% filter(par %in% c('sigma', 'rho', 'EcovBeta')) # meanEcov too?
temp = temp %>% filter(maxgrad < 1, scenario %in% c(25:40, 65:80)) # select only relevant scenarios
temp = temp %>% mutate(method = factor(method, levels = c('Ecov'),
labels = c('LEc')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(par, levels = c('sigma', 'rho', 'EcovBeta'),
labels = c(expression(sigma[X]^2), expression(rho[X]), expression(beta))))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p5 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-1, 1)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-1, -0.5, 0, 0.5, 1)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'ecov.jpg'), plot = p5,
width = 190 , height = 220, units = 'mm', dpi = 500)
# -------------------------------------------------------------------------
# WAA info (median over years, only for WAA and Ewaa scenarios):
temp = waa_df
temp = temp %>% filter(maxgrad < 1, scenario %in% c(1:8, 41:48)) # select only relevant scenarios
temp = temp %>% dplyr::group_by(age, data_scen, catch_data, index_data, caal_samp, method, growth_par, im) %>%
dplyr::summarise(rel_error = median(rel_error))
temp = temp %>% mutate(method = factor(method, levels = c('EWAA', 'WAA'),
labels = c('WEm', 'WNP')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(age, levels = 1:10,
labels = 1:10))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p6 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.2, 0.2)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.1, 0, 0.1)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
p6
ggsave(filename = file.path(save_folder, 'waa.jpg'), plot = p6,
width = 190 , height = 240, units = 'mm', dpi = 500)
# -------------------------------------------------------------------------
# LAA info (median over years, only for growth Ecov SemiG and LAA scenarios):
temp = laa_df
temp = temp %>% filter(maxgrad < 1, scenario %in% c(9:40, 49:80)) # select only relevant scenarios
temp = temp %>% dplyr::group_by(age, data_scen, catch_data, index_data, caal_samp, method, growth_par, im) %>%
dplyr::summarise(rel_error = median(rel_error))
temp = temp %>% mutate(method = factor(method, levels = c('growth', 'Ecov'),
labels = c('LP', 'LEc')))
temp$caal_samp[temp$caal_samp == 'random'] = '(r)'
temp$caal_samp[temp$caal_samp == 'strat'] = '(s)'
temp$index_data[temp$index_data == 'caal'] = 'pal/caal'
temp = temp %>% mutate(em_label = if_else(condition = index_data == 'pal/caal',
true = paste0(method,'-',catch_data,'-',index_data,caal_samp),
false = paste(method,catch_data,index_data, sep = '-')))
temp = temp %>% mutate(em_label = factor(em_label, levels = EM_order))
temp = temp %>% mutate(par2 = factor(age, levels = 1:10,
labels = 1:10))
temp = temp %>% mutate(om_label = factor(growth_par, levels = 0:3,
labels = c('Time~invariant', Variability~"in"~k, expression(Variability~"in"~L[infinity]), expression(Variability~"in"~L[1]))))
# Make plot:
p7 = ggplot(temp, aes(x=em_label, y=rel_error, fill=data_scen, color = data_scen)) +
geom_violin(position=position_dodge(0.6), alpha = 0.75) +
theme_bw() +
coord_cartesian(ylim = c(-0.2, 0.2)) +
geom_hline(yintercept=0, color=1, linetype='dashed') +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text = element_text(size = 10)) +
scale_y_continuous(breaks=c(-0.1, 0, 0.1)) +
xlab(NULL) + ylab('Relative error') +
facet_grid(par2 ~ om_label, labeller = my_label_parsed)
ggsave(filename = file.path(save_folder, 'laa.jpg'), plot = p7,
width = 190 , height = 240, units = 'mm', dpi = 500)
